# Generated by Django 4.2.7 on 2023-11-27 09:50

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='KinoriumMovie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('original_title', models.CharField(max_length=50)),
                ('year', models.PositiveSmallIntegerField()),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Новый'), (1, 'Просмотрен'), (2, 'Буду смотреть'), (3, 'Не буду смотреть')], default=0, verbose_name='Статус')),
            ],
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_scan', models.DateField(default=datetime.datetime(2023, 5, 31, 11, 50, 26, 431428))),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ru_name', models.CharField(max_length=70)),
                ('en_name', models.CharField(max_length=70)),
                ('year', models.PositiveSmallIntegerField()),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Новый'), (1, 'Просмотрен'), (2, 'Буду смотреть'), (3, 'Не буду смотреть')], default=0, verbose_name='Статус')),
                ('imdb_id', models.PositiveSmallIntegerField()),
                ('kinopoisk_id', models.PositiveSmallIntegerField()),
                ('kinorium_id', models.PositiveSmallIntegerField()),
                ('genres', models.ManyToManyField(related_name='movies', to='kinozal.genre')),
            ],
        ),
    ]
